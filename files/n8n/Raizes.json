{
  "active": true,
  "connections": {
    "auth": {
      "main": [
        [
          {
            "node": "points",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "points": {
      "main": [
        [
          {
            "node": "Read/Write Files from Disk1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "Discord",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Ponto do dia": {
      "main": [
        [
          {
            "node": "auth",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Extract from File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract from File": {
      "main": [
        [
          {
            "node": "linha",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "linha": {
      "main": [
        [
          {
            "node": "if number1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Sort2": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter": {
      "main": [
        [
          {
            "node": "Sort2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read/Write Files from Disk1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "returnPoints": {
      "main": [
        [
          {
            "node": "Sort",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if number1": {
      "main": [
        [
          {
            "node": "if number",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "returnPoints",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "if number": {
      "main": [
        [
          {
            "node": "filter",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "filter1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "filter1": {
      "main": [
        [
          {
            "node": "Sort2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-12-11T14:10:30.137Z",
  "id": "QfmOecB9bdFQSJEG",
  "meta": null,
  "name": "Raizes",
  "nodes": [
    {
      "parameters": {
        "method": "POST",
        "url": "http://82.180.136.148:3341/api/v1/auth/login",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "username",
              "value": "rodcordeiro"
            },
            {
              "name": "password",
              "value": "@Drigo13"
            }
          ]
        },
        "options": {}
      },
      "id": "11bd385f-236f-4579-92bb-9f76a7ca0027",
      "name": "auth",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1600,
        -300
      ]
    },
    {
      "parameters": {
        "url": "http://82.180.136.148:3341/api/v1/points",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.accessToken }}"
            }
          ]
        },
        "options": {}
      },
      "id": "2e769775-3e00-46f6-8573-6f43cc54b19d",
      "name": "points",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -1400,
        -300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "type": "random"
      },
      "id": "0ea1b57b-b26d-4f0c-bc55-45a9dcfbf8db",
      "name": "Sort",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        380,
        20
      ]
    },
    {
      "parameters": {},
      "id": "1b571502-3ef2-4adf-b8a5-42455273ed50",
      "name": "Limit",
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        620,
        20
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "authentication": "webhook",
        "content": "=\nBom dia gente, benção pais, mães e mais velhos e que Logun Edé e Exu nos abençoem e bora de ponto. Ponto de {{ $json.linha.nome }}, no ritmo {{ $json.ritmo.nome }}.\n\n```\n{{ $json.letra }}\n```\n\n{{ $json.audio_url }}\n\nMais pontos de {{ $json.linha.nome }} no https://raizes.rodrigocordeiro.com.br/index.php?buscar={{ $json.linha.nome.urlEncode() }}#{{ $json.id }}",
        "options": {
          "avatar_url": "HTTPS://rodcordeiro.github.io/shares/favicons/favicon-raizes/ms-icon-144x144.png",
          "username": "Raízes"
        }
      },
      "id": "7c17d561-21ef-4660-9680-2488b4f2659f",
      "name": "Discord",
      "type": "n8n-nodes-base.discord",
      "typeVersion": 2,
      "position": [
        840,
        20
      ],
      "credentials": {
        "discordWebhookApi": {
          "id": "RiA5jqb4WiIcmb6i",
          "name": "Dath Testes"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 6
            }
          ]
        }
      },
      "id": "32a62bf6-94ca-4519-b699-04a7e744e3f5",
      "name": "Ponto do dia",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -1760,
        -300
      ]
    },
    {
      "parameters": {
        "fileSelector": "/files/schedule.json",
        "options": {
          "dataPropertyName": "data"
        }
      },
      "id": "86db1b24-c4a3-46cf-871f-b8ad3e92b2b7",
      "name": "Read/Write Files from Disk1",
      "type": "n8n-nodes-base.readWriteFile",
      "typeVersion": 1,
      "position": [
        -1220,
        -300
      ],
      "alwaysOutputData": true,
      "executeOnce": true
    },
    {
      "parameters": {
        "jsCode": "function getNextSaturday() {\n    const today = new Date();\n    const dayOfWeek = today.getDay(); // 0 (domingo) a 6 (sábado)\n    const daysUntilSaturday = (6 - dayOfWeek + 7) % 7 || 7; // Calcula os dias até o próximo sábado\n    const nextSaturday = new Date(today);\n    nextSaturday.setDate(today.getDate() + daysUntilSaturday);\n    \n    return nextSaturday;\n}\n// Loop over input items and add a new field called 'myNewField' to the JSON of each one\nfor (const item of $input.all()) {\n     item.json.nextSaturday = getNextSaturday().toLocaleDateString('pt-br');\n}\n\nreturn $input.all();"
      },
      "id": "52dfd472-d8e9-49c7-b148-22dee94b9db7",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1040,
        -300
      ]
    },
    {
      "parameters": {
        "operation": "fromJson",
        "options": {}
      },
      "id": "6e815e6d-a335-4391-8d1e-5dcc9bfb9f55",
      "name": "Extract from File",
      "type": "n8n-nodes-base.extractFromFile",
      "typeVersion": 1,
      "position": [
        -880,
        -300
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c099b797-1ece-401d-9fd3-149856d81eb9",
              "name": "linha",
              "value": "={{ $json.data[$('Code').item.json.nextSaturday] }}",
              "type": "object"
            }
          ]
        },
        "options": {
          "ignoreConversionErrors": true,
          "dotNotation": false
        }
      },
      "id": "30647612-82ab-4da4-bd0c-87f7311aad61",
      "name": "linha",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -720,
        -300
      ],
      "executeOnce": true
    },
    {
      "parameters": {
        "type": "random"
      },
      "id": "c535512b-0496-4c17-8de3-a6ece0a99e73",
      "name": "Sort2",
      "type": "n8n-nodes-base.sort",
      "typeVersion": 1,
      "position": [
        380,
        -340
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n// for (const item of $input.all()) {\nreturn  $('points').all().filter(i=>i.json.linha.id === $('linha').first().json.linha[0])\n\n\n"
      },
      "id": "fd00e2aa-3d35-4dde-b899-b47abe133a09",
      "name": "filter",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        80,
        -340
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "jsCode": "return $('points').all()"
      },
      "id": "c72b0c76-75e2-474a-9201-ad478b5cecf7",
      "name": "returnPoints",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        80,
        20
      ]
    },
    {
      "parameters": {
        "jsCode": "// Loop over input items and add a new field called 'myNewField' to the JSON of each one\n// for (const item of $input.all()) {\nconsole.log($('linha').first().json.linha,typeof $('linha').first().json.linha)\nreturn  $('points').all().filter(i=> $('linha').first().json.linha.includes(i.json.linha.id))\n\n\n"
      },
      "id": "e4b116e1-584f-411a-8393-043c686cb4c5",
      "name": "filter1",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        80,
        -160
      ],
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "16096c73-7f0f-40d5-963a-ec4e473d5945",
              "leftValue": "={{ !!$json.linha}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "3341e883-d28f-475d-92f0-c5ff0625437a",
      "name": "if number1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -560,
        -300
      ],
      "alwaysOutputData": false,
      "executeOnce": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 1
          },
          "conditions": [
            {
              "id": "16096c73-7f0f-40d5-963a-ec4e473d5945",
              "leftValue": "={{ !!$json.linha}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            },
            {
              "id": "0989f413-45eb-438a-b406-3fde3acbe64e",
              "leftValue": "={{ !isNaN($json.linha)}}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {
          "looseTypeValidation": true
        }
      },
      "id": "2953c0c8-8317-485f-a557-cf3bb12c78d6",
      "name": "if number",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        -260,
        -320
      ],
      "alwaysOutputData": false,
      "executeOnce": true
    }
  ],
  "pinData": {},
  "repo_name": "shares",
  "repo_owner": "rodcordeiro",
  "repo_path": "files/n8n",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": {
    "node:Ponto do dia": {
      "recurrenceRules": []
    }
  },
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-01-15T12:53:32.000Z",
  "versionId": "41bed2e9-6d77-40ee-9f49-fdb6add2a8fd"
}